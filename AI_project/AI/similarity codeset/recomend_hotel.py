import pandas as pd
import numpy as np
import os
import time

#from pororo import Pororo
from sklearn.metrics.pairwise import cosine_similarity
from multiprocessing import Pool
def get_similarity(review, vec):
    similarity = review['vector'].apply(lambda x: cosine_similarity(x.reshape(1, -1), vec.reshape(1, -1)))
    return similarity

def get_similarity_rank_df(hotel_info_df, hotel_review_df, region, user_input):
    # 몇 개의 리뷰를 기준으로 할지
    review_number = 5

    # Pororo 사용 코드
    #se = Pororo(task="sentence_embedding", lang="ko")
    #user_input_vec = se(user_input)

    # Pororo가 안돼서 벡터값 직접 넣음
    user_input_vec = np.array([-1.57562912e-01, -1.51854858e-01, -1.26009360e-01, -6.93807080e-02,
        5.42373583e-02, -2.90999025e-01,  3.88404466e-02,  5.07425778e-02,
        2.21945286e-01,  1.97831895e-02,  2.91979983e-02,  7.65462965e-03,
       -6.79136440e-02, -4.93687168e-02, -3.03154171e-01, -3.10812265e-01,
        3.14514667e-01, -1.20555729e-01,  1.83187574e-02, -1.38460025e-01,
        8.26979727e-02, -2.02298611e-01,  3.69602279e-03,  1.11586720e-01,
        4.12000239e-01, -2.02933490e-01, -8.42700526e-03, -3.37442547e-01,
       -1.42554700e-01, -3.81027795e-02, -3.02866727e-01,  1.37502015e-01,
        2.23172292e-01, -7.42638856e-02,  2.60988206e-01, -1.03434429e-01,
        6.97478428e-02, -8.86365846e-02, -2.04902649e-01, -1.32207945e-01,
       -2.91238874e-01, -2.16680184e-01, -1.35368213e-01,  3.76372963e-01,
        1.06739379e-01,  8.65575969e-02,  3.55678082e-01, -5.04446030e-01,
       -4.58568409e-02,  3.17245093e-03, -1.51940256e-01,  7.12672025e-02,
       -3.84684540e-02,  1.75874248e-01,  7.94464052e-02,  2.51906037e-01,
        2.40637034e-01,  2.92060435e-01, -7.65091479e-02,  1.43803060e-01,
       -2.00875416e-01,  3.35554145e-02,  5.28784879e-02, -6.43419251e-02,
        3.87800969e-02, -7.87892044e-01,  2.81575788e-02, -9.40540135e-02,
        4.79317725e-01,  1.98150337e-01, -1.02700941e-01, -2.47957647e-01,
       -2.38549318e-02,  2.79777199e-01, -3.97860229e-01, -9.18978453e-02,
       -7.45623857e-02, -3.74695063e-02,  2.54676908e-01, -4.38186049e-01,
        1.02034867e-01,  1.88402012e-02,  2.41371289e-01,  3.89681846e-01,
       -8.62892866e-02,  6.15717620e-02,  3.07388157e-01, -8.25989246e-02,
        4.42171514e-01,  1.00991316e-02,  1.20599978e-02, -4.82896939e-02,
        3.61740947e-01, -4.84575868e-01,  9.94849876e-02, -3.46113518e-02,
       -1.05093136e-01,  1.75416797e-01, -2.10820958e-01,  1.10388240e-02,
       -1.71618566e-01, -7.12911189e-01, -3.29248935e-01, -1.09401949e-01,
       -1.39163077e-01,  2.18002591e-02,  2.42611483e-01, -2.19931841e-01,
        7.71824569e-02, -8.76024142e-02,  4.64528292e-01, -1.57990977e-01,
        3.97593021e-01,  3.78838778e-01, -2.91849077e-01,  2.05449890e-02,
       -9.55031663e-02, -2.71077663e-01,  1.13761388e-01,  3.45401615e-02,
       -2.09322557e-01,  4.16355401e-01,  1.37917101e-01, -1.93972513e-02,
        2.62653470e-01, -2.60711685e-02,  4.64812875e-01, -6.48679852e-04,
       -4.78393659e-02,  1.11358389e-01, -1.42996013e-01, -2.12822035e-01,
        2.98218071e-01, -8.91891345e-02, -1.00895315e-01, -1.49760664e-01,
       -1.05155177e-01,  2.60900140e-01, -6.93062618e-02,  4.77444865e-02,
        6.93738341e-01,  9.23997760e-02, -2.03714922e-01,  2.24982336e-01,
       -4.92549501e-02, -3.44699413e-01, -1.83750212e-01, -1.25434190e-01,
       -1.37517035e-01, -3.46023768e-01,  1.55660912e-01, -1.48915619e-01,
       -1.71466053e-01,  1.44895688e-01, -3.97297680e-01,  3.72677296e-02,
        8.42712969e-02,  3.12390417e-01, -3.64584565e-01,  1.67719230e-01,
        4.62685153e-02,  1.86577708e-01, -3.98475111e-01, -1.52496979e-01,
        2.00925544e-01,  1.16730012e-01,  2.48542950e-02,  7.51603842e-02,
        2.52415597e-01, -1.51719987e-01,  1.78128555e-01,  1.42184854e-01,
        1.16268583e-01, -1.42975837e-01,  7.29818046e-01,  2.34369673e-02,
        3.35813731e-01,  1.42153233e-01, -1.38682485e-01, -4.39500399e-02,
       -4.37158439e-03, -4.21763062e-01,  1.10399008e-01,  1.07454527e-02,
        5.92257567e-02, -1.50591105e-01, -7.95327872e-03,  1.15261398e-01,
       -1.35633154e-02, -3.44905257e-01,  3.25563252e-01,  1.04173869e-01,
        2.31515393e-02, -6.25839233e-02, -1.08682357e-01,  1.69111669e-01,
       -9.77529138e-02, -3.16272706e-01,  2.65555918e-01, -1.92980200e-01,
       -1.21384719e-02, -1.79608762e-01,  2.25210190e-01, -1.19655743e-01,
        8.50675255e-02, -6.75031841e-02,  2.41803583e-02, -1.96997765e-02,
        2.44962275e-01, -3.35807979e-01, -3.04641038e-01,  3.48488763e-02,
       -1.90053493e-01,  1.97459552e-02,  6.93823099e-02,  2.86310464e-01,
       -6.13830239e-03, -4.33816731e-01,  3.73939835e-02,  1.84798136e-01,
       -4.66231465e-01, -7.13398308e-02, -1.76192284e-01,  4.25988697e-02,
        6.31871149e-02,  1.77459806e-01,  1.05363540e-01,  4.86756004e-02,
        3.77552867e-01, -2.60998160e-01,  5.13819531e-02, -2.68475320e-02,
        2.71374822e-01, -2.77650684e-01,  2.64322162e-01, -1.46274403e-01,
       -6.53009042e-02,  2.69725192e-02, -2.97696054e-01,  7.29602575e-03,
       -1.09043919e-01, -1.61989376e-01, -7.89683312e-02, -3.50051224e-02,
       -3.17293778e-02, -1.01623712e-02, -2.92472425e-03,  3.24592710e-01,
       -1.12655178e-01,  2.95938939e-01,  4.79809241e-03,  4.18309867e-01,
        8.13748464e-02, -6.84862509e-02, -5.27083278e-01,  2.15092674e-01,
        5.49559854e-03, -1.33227378e-01, -2.38322746e-03,  1.32257044e-01,
        1.46498844e-01, -6.79305382e-03,  2.38229111e-01, -1.19195618e-01,
        4.59304601e-01,  4.94105488e-01,  8.53701681e-02,  9.97373760e-02,
        3.04714441e-02,  3.95672600e-04,  7.02307560e-03, -2.05582276e-01,
       -1.06481522e-01, -1.00420557e-01,  2.81571239e-01,  2.26822540e-01,
       -4.55201954e-01,  2.91105974e-02, -4.93521899e-01,  1.08507603e-01,
       -1.29519999e-01,  9.28395912e-02,  1.87629312e-02,  8.54965597e-02,
        1.44335330e-01, -1.84868649e-01, -9.55156138e-05, -1.31783500e-01,
        2.31446419e-02,  7.93819129e-02,  1.50063261e-01, -2.57627815e-01,
        7.10850507e-02, -1.37828276e-01, -3.54488492e-01,  4.74768877e-02,
       -1.22300163e-01,  2.09065661e-01, -2.64791977e-02,  3.73805314e-02,
       -1.82155520e-01, -2.69937962e-01,  2.46406421e-02, -3.75606000e-01,
       -4.12608355e-01, -4.12814736e-01,  1.02822848e-01,  1.85967028e-01,
       -4.42704000e-02, -1.07730202e-01, -1.16040349e-01,  2.29383886e-01,
       -4.82234173e-02, -2.17488870e-01,  3.14315647e-01, -6.78545058e-01,
        4.98324670e-02, -5.11026680e-01,  5.98384403e-02, -1.79986075e-01,
        2.46962383e-02, -1.12120524e-01, -4.19625863e-02,  2.50616431e-01,
       -6.75688908e-02, -2.65172839e-01,  1.74016267e-01,  2.79553294e-01,
       -7.24344924e-02, -1.46942109e-01,  1.14481345e-01,  2.55569428e-01,
       -2.86526978e-02, -2.31856078e-01, -6.76327407e-01, -8.87929201e-02,
       -1.37540638e-01,  2.54465137e-02,  2.85604268e-01, -4.99963164e-02,
        5.39255105e-02, -5.49967811e-02,  2.40918081e-02, -1.90980852e-01,
       -2.91246891e-01, -1.27082944e-01,  3.70343663e-02, -1.62957087e-01,
       -2.71827012e-01, -1.51024610e-01,  8.39886628e-03, -1.15900502e-01,
       -1.46988347e-01,  2.72508264e-01, -2.14792192e-01,  1.61469042e-01,
       -9.71450582e-02,  3.09771806e-01,  9.19982046e-02,  3.01990002e-01,
       -8.85640606e-02,  1.36913314e-01,  1.22427076e-01,  1.13270968e-01,
       -1.55038431e-01, -8.16244856e-02, -3.49426329e-01,  4.50352170e-02,
       -3.40098649e-01, -2.61788964e-01, -2.48856366e-01,  3.57424855e-01,
       -3.15837935e-02, -1.52860567e-01, -1.47058785e-01, -1.18455380e-01,
        3.37571278e-02,  3.26682448e-01,  1.22513086e-01, -2.85917431e-01,
       -1.32282320e-02,  5.82493050e-03, -1.06665164e-01, -2.54482757e-02,
       -4.90391195e-01,  6.41717911e-02, -5.01770318e-01,  2.33115673e-01,
        1.47700965e-01,  1.80338338e-01,  9.59570706e-03,  1.03232609e-02,
       -2.86751539e-01,  1.74611881e-01, -3.21111605e-02,  2.87767053e-01,
        1.92469731e-01, -5.77264428e-01, -1.93223208e-01,  2.57180538e-02,
       -3.79156321e-01,  1.29519045e-01,  1.22507840e-01,  2.19894722e-01,
        3.07185519e-02,  1.87500454e-02, -2.69026667e-01, -2.89427370e-01,
       -2.02382043e-01,  6.06633760e-02, -2.27594107e-01, -2.59004265e-01,
        3.22728783e-01, -1.18047155e-01, -3.60349603e-02, -7.47276694e-02,
       -3.34076136e-01, -1.77110299e-01,  1.25197202e-01, -3.01691927e-02,
        5.52147627e-01,  1.92306802e-01,  3.69771235e-02,  3.14057618e-02,
       -8.46513361e-02, -6.36125505e-02, -1.31521106e-01, -1.65755209e-02,
       -2.49541830e-03, -1.66893918e-02,  6.12230301e-02, -2.67559260e-01,
        4.38235812e-02,  6.56819195e-02,  2.44769201e-01,  1.79475136e-02,
       -4.44947362e-01,  2.65291333e-01, -1.39132932e-01,  3.62147003e-01,
       -3.97374153e-01,  2.40929611e-02,  8.40564817e-02,  1.55451700e-01,
        6.51879534e-02, -7.31117502e-02, -5.99855423e-01, -3.28051805e-01,
       -3.49170208e-01, -8.15182626e-02, -3.11475068e-01,  1.88639790e-01,
        1.85189769e-01, -4.00212919e-03,  3.62168640e-01, -1.20354518e-01,
       -9.12392735e-02,  1.47042766e-01, -6.62595555e-02, -5.95018864e-02,
       -3.08053136e-01,  1.32750362e-01, -5.69103770e-02, -3.72432731e-02,
        2.60164857e-01, -1.05417214e-01,  1.12230100e-01,  1.31364286e-01,
       -4.54138592e-02, -4.07053977e-02, -3.51097971e-01,  1.37307301e-01,
       -1.09318271e-01, -1.26213491e-01, -6.22565076e-02, -1.67875811e-02,
       -2.82641977e-01, -1.70316294e-01,  1.62916735e-01, -3.52432698e-01,
        1.90353021e-02,  3.35408568e-01, -4.20874096e-02,  8.28507394e-02,
       -1.78993106e-01,  1.44901192e-02,  2.21177712e-01,  2.59297565e-02,
       -8.31122696e-02, -6.36420585e-03, -3.38851541e-01,  2.25604638e-01,
       -1.68114141e-01,  2.52195317e-02,  2.46193588e-01, -2.28881702e-01,
       -2.89591938e-01,  4.09126192e-01, -1.09149307e-01,  1.64480954e-02,
       -2.02713206e-01,  1.83396325e-01,  3.22139382e-01,  7.83122420e-01,
       -5.00713941e-03, -2.82608211e-01,  2.94189528e-02,  8.33566040e-02,
       -1.76784173e-02,  3.12247127e-01, -8.54991283e-03, -3.48702550e-01,
       -4.52315109e-03, -1.04778059e-01,  2.28536338e-01,  2.88763940e-01,
       -3.53627890e-01,  1.24663793e-01, -1.97228596e-01, -6.04101837e-01,
       -2.42443427e-01,  1.14182144e-01, -1.55862123e-01, -1.22403622e-01,
       -3.23466599e-01, -3.58735651e-01, -3.40793848e-01, -3.29353055e-03,
        1.55751050e-01, -2.11202472e-01,  1.45862699e-01, -1.26149476e-01,
        2.68086302e-03, -1.69951856e-01, -1.08805858e-01, -1.37649775e-01,
        1.60869345e-01, -1.81067646e-01, -8.53455290e-02,  1.84691120e-02,
       -2.98909917e-02, -2.84148693e-01, -3.60743165e-01, -3.56003761e-01,
       -7.06779957e-02, -4.52669598e-02,  8.19533840e-02,  1.67999923e-01,
       -4.20451522e-01, -2.23291051e-02,  2.04982292e-02, -9.04413313e-02,
       -7.61509612e-02, -1.02233581e-01,  3.72473985e-01,  3.07313293e-01,
       -7.87755921e-02,  1.94193050e-01, -1.84809878e-01,  6.41218806e-03,
        1.94452465e-01,  1.20710004e-02, -1.08054146e-01, -1.23962842e-01,
       -1.58199340e-01, -1.70766622e-01,  9.42766294e-02,  1.37428120e-01,
       -1.22598253e-01, -2.42384881e-01, -2.28084832e-01, -2.68667266e-02,
       -2.63264865e-01,  4.33915704e-02, -9.66137554e-03,  1.08064488e-01,
       -3.98810394e-03,  7.08314925e-02,  3.45056564e-01,  9.96037051e-02,
       -1.82513203e-02, -1.79214537e-01,  2.23438844e-01, -1.35101033e-02,
       -2.44612291e-01, -3.46074551e-02, -2.46984065e-01, -4.08713222e-01,
       -1.42959952e-01, -2.99362928e-01, -3.76731157e-02, -2.62750797e-02,
        8.51632208e-02,  2.19148010e-01, -2.49888659e-01,  3.78153995e-02,
       -3.72814876e-03,  1.01040810e-01, -9.16515216e-02, -4.25362408e-01,
        2.99327578e-02,  3.87473911e-01, -1.09256906e-02,  8.10809955e-02,
        1.68663830e-01,  1.04777636e-02,  8.87006372e-02, -8.88646469e-02,
       -3.44318971e-02,  1.67608291e-01,  3.39113027e-02,  7.42628425e-02,
        2.43318722e-01,  5.81440181e-02, -2.05880821e-01, -6.30193055e-02,
       -1.55265301e-01,  4.88415100e-02, -4.36933525e-02, -2.01625362e-01,
        7.47411922e-02, -2.25104645e-01,  1.53800502e-01,  1.78912014e-01,
        4.31835093e-03, -4.69181687e-02, -5.03003672e-02,  1.71268374e-01,
        2.00418904e-02,  5.64341284e-02, -2.11258098e-01,  3.50434899e-01,
        1.67670220e-01, -2.60790437e-01, -3.03784072e-01, -1.76423788e-01,
       -1.45349309e-01,  3.68049592e-02, -4.05514240e-02,  2.26322621e-01,
       -1.35594994e-01, -2.47086108e-01,  1.63806260e-01,  1.02864079e-01,
        5.51174320e-02, -1.30190551e-02,  1.01222508e-01,  2.15175524e-02,
        2.07260221e-01, -1.69293195e-01,  6.16339266e-01, -3.00605427e-02,
        2.95289189e-01,  1.05543155e-02, -8.06172788e-02, -9.26779583e-02,
        2.92192936e-01, -3.23391795e-01, -5.40050209e-01,  7.69949257e-02,
        9.79667529e-02,  2.28519499e-01, -6.32951558e-02, -9.66099575e-02,
        1.86205909e-01, -2.76772473e-02,  3.69017571e-02, -3.40959609e-01,
       -1.80808395e-01, -1.49267271e-01,  1.84135631e-01,  3.39429528e-02,
       -1.43053591e-01,  4.34375256e-02,  3.60742003e-01,  5.35284430e-02,
        1.23468876e-01, -3.05361003e-01, -8.21174905e-02, -2.28925645e-02,
       -1.66235447e-01,  2.50515610e-01, -1.14154108e-02,  2.63635993e-01,
        8.04263819e-03,  1.87852949e-01,  4.74278517e-02,  3.73278648e-01,
       -6.78605735e-02,  5.59151359e-02,  1.62512250e-02, -1.37269199e-01,
       -9.57742482e-02,  5.33997774e-01,  7.07915798e-02,  3.11144829e-01,
        9.70486272e-03,  2.37232540e-02,  7.04084933e-02,  2.50027180e-02,
        6.19944669e-02, -1.03987537e-01, -1.50070190e-01,  3.38824391e-01,
       -1.35898337e-01, -1.77668139e-01, -2.90804058e-01, -5.50463974e-01,
       -3.54312748e-01, -1.02651626e-01, -1.16806775e-01,  1.01459213e-01,
        9.30378065e-02, -2.73556769e-01,  3.19280982e-04,  2.56086979e-02,
        4.38316703e-01,  2.75417835e-01, -4.59074453e-02, -3.14762264e-01,
       -1.55164614e-01, -2.10251391e-01, -2.92784184e-01, -3.25747319e-02,
       -3.68449181e-01, -1.93737745e-02,  5.18255770e-01,  1.92915499e-02,
        2.52728835e-02, -3.21097493e-01, -1.10206127e-01, -1.96247116e-01,
       -4.25936729e-02,  7.42884651e-02,  1.31426409e-01,  4.11126673e-01,
        8.20659399e-02,  1.16783567e-02, -5.42292856e-02, -4.09705758e-01,
       -1.13357358e-01,  1.01678699e-01,  1.29255831e-01, -1.54056221e-01,
        1.08942963e-01, -4.49776277e-02,  4.20227647e-01, -7.76347145e-02,
       -2.55138457e-01,  3.11408248e-02, -2.96704352e-01, -2.42852747e-01,
        5.86509705e-02, -2.26036072e-01, -7.47357011e-02,  7.09060729e-02,
        5.60269356e-02,  4.48789485e-02, -1.65371656e-01, -5.81353754e-02,
       -4.81600146e-04,  3.50956172e-01,  3.16905901e-02,  5.48793554e-01,
       -1.42166257e-01,  9.09604877e-02, -5.01324832e-01,  8.58023763e-02],)

    # 지역, label 필터링
    filtered_hotel_info_df = hotel_info_df[hotel_info_df['region'].isin(region)]
    positive_hotel_review_df = hotel_review_df[hotel_review_df['label'] == 1]
    filtered_hotel_review_df = positive_hotel_review_df[positive_hotel_review_df['hotel_id'].isin(filtered_hotel_info_df['hotel_id'])].copy()

    # similarity 계산
    print("start calculate similarity")
    start = time.time()
    process_num = 4
    with Pool(process_num) as p:
        range_review = len(filtered_hotel_review_df) // process_num
        ret1 = p.apply_async(get_similarity, (filtered_hotel_review_df[:range_review], user_input_vec))
        ret2 = p.apply_async(get_similarity, (filtered_hotel_review_df[range_review:range_review*2], user_input_vec))
        ret3 = p.apply_async(get_similarity, (filtered_hotel_review_df[range_review*2:range_review*3], user_input_vec))
        ret4 = p.apply_async(get_similarity, (filtered_hotel_review_df[range_review*3:], user_input_vec))
        filtered_hotel_review_df['similarity'] = pd.concat([ret1.get(), ret2.get(), ret3.get(), ret4.get()])
    #filtered_hotel_review_df['similarity'] = filtered_hotel_review_df['vector'].apply(lambda x: cosine_similarity(x.reshape(1, -1), user_input_vec.reshape(1, -1)))
    print(f"end calculate similarity : {time.time() - start}")

    # hotel_id 별 top similarity review 추출
    top_hotel_review_df = filtered_hotel_review_df.sort_values(by='similarity', ascending=False).groupby('hotel_id').head(review_number)

    # similarity 평균을 사용해 hotel_id 정렬
    hotel_rank = top_hotel_review_df[['hotel_id', 'similarity']].groupby('hotel_id').mean().sort_values('similarity', ascending=False)

    return hotel_rank, top_hotel_review_df




def set_return_data(hotel_rank, top_hotel_review_df):
    return_data = []
    for itertuple in hotel_rank.itertuples():
        # hotel_rank groupby 하면서 hotel_id 가 index로 들어감
        hotel_id = itertuple.Index
        
        review_id_list = top_hotel_review_df[top_hotel_review_df['hotel_id'] == hotel_id]['review_id'].values
        review_id_list = [str(review_id) for review_id in review_id_list]
        similarity = round(itertuple.similarity[0][0] * 100, 1)

        hotel_dict = {}
        hotel_dict["hotel_id"] = hotel_id
        hotel_dict['review_id'] = review_id_list
        hotel_dict['similarity'] = similarity

        return_data.append(hotel_dict)

    return return_data


# -------------------------

def get_recomended_hotel(region, user_input):
    try:
        hotel_review_df = pd.read_pickle('./BE/app/service/ai/review.pkl')
        hotel_info_df = pd.read_pickle('./BE/app/service/ai/info.pkl')

        hotel_rank, top_hotel_review_df = get_similarity_rank_df(hotel_info_df, hotel_review_df, region, user_input)

        # recomended_hotel을 백엔드에 전달하기 위해 변환
        return_data = set_return_data(hotel_rank, top_hotel_review_df)

        return return_data

    except Exception as e:
        print(e)
        return e
